---
title: "Getting started with R"
author: Sowmya Janmahanthi
date: 23/09/2024
format: html
---

### Exercise 1 {#sec-1}

* Create a vector of the letters A, B and C.

```{r}
c("A","B","C")
```
> Your answer as text
[1] "A" "B" "C"


* Assign the vector to a variable `my_letters`
```{r}
my_letters <- c("A","B","C")
my_letters
```


* Check the what happens when you run `letters` (just this) on the command line.
```{r}
letters

```

> Your answer as text
[1] "a" "b" "c" "d" "e" "f" "g" "h"
 [9] "i" "j" "k" "l" "m" "n" "o" "p"
[17] "q" "r" "s" "t" "u" "v" "w" "x"
[25] "y" "z"


* What happens when you concatenate two vectors? Add `c(my_letters , my_letters)`
```{r}
c(my_letters,my_letters)


```

> Your answer as text
[1] "A" "B" "C" "A" "B" "C"
The vector repeats/adding itself.

* Add the number 1 to letters. What happens to the type of the vector?
```{r}
letters+1

```

> Your answer as text
Error in letters + 1 : non-numeric argument to binary operator


### Exercise 2


1. Create a vector `my_vec` with the numbers from 1 through 8.
2. Apply the operation `+2` to the vector/
3. Add the vector containing 1, 2, 3, 4 to `my_vec`. What do you observe?

```{r}
my_vec <- 1:8
my_vec
my_vec+2
my_vec+c(1,2,3,4)

```



### Exercise 3

* Consider the R output of the matrix below:

```
 [,1] [,2]
 [1,]    4    1
 [2,]    9    5
 [3,]   10    7
```

1. What was one of the correct commands used to write this matrix?
2. Assign the matrix as `A`
3. Check the dimensions
4. Extract the element `5`
5. Add the vector `c(0,0,0)` as a new column and update `A`
6. Modify the element 4 to `0`
7. Compute the transpose of `A`

```{r}
matrix <- matrix(c(4,9,10,1,5,7), nrow = 3)
A <- matrix
A
dim(A)
A[2,2]
A <- cbind(A,c(0,0,0))
A
A[1,1] <- 0
A
t(A)

```



8. Are any values in `A` larger than 10? 
```{r}
any(A>10)

```

9. Are all values in `A` smaller than 10?
```{r}
all(A<10)

```

### Exercise 4

1. Create a function that sums up two values even if provided as characters values

```{r}
# Your answer in code
sum_function <- function(a,b){return(as.numeric(a) + as.numeric(b))
}
sum_function(2,12)
sum_function("H","i")

```


### Exercise 5

1. Create a function that returns the mean, median and standard deviation.

```{r}
# Your answer in code
newfunction <- function(x){list(mean=mean(x),median=median(x),sd=sd(x))
}
newfunction(c(22,33,44))
```


### Exercise 6
1. Create a pipe statement that counts the number of NAs in vector containing numbers, characters and missing values.
The output of `c('1' , "a", NA, "2", NA)` should be 2.

```{r}
vector1 <- c('1' , "a", NA, "2", NA)
count_na <- sum(is.na(vector1))
count_na
```


